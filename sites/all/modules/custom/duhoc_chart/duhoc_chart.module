<?php

/**
 * implement hook_init
 */
function duhoc_chart_init() {
  drupal_add_js(drupal_get_path('module','duhoc_chart').'/misc/jsapi');
  drupal_add_js(drupal_get_path('module','duhoc_chart').'/misc/chart.js');
}
/**
 * Implement hook_menu
 */
function duhoc_chart_menu() {
  $items['manage/%'] = array(
    'title' => '',
    'page callback' => 'duhoc_chart_area_agrument',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function duhoc_chart_area_agrument() {
  $area = arg(1);
  $table = '<h2>Table Mothly Sales</h2>'.theme('table', array('header' => array("Month","Sales"),   'rows' => duhoc_chart_time_now($area) ));
  $content = duhoc_chart_data($area);
  print json_encode(array('status' => TRUE, 'data' => $content, 'right' =>$table));
  exit;

}

/**
 * implement hook block_info
 */

function duhoc_chart_block_info() {
  $blocks['chart_colum_home'] = array(
    'info' => t('Chart sales home'),
  );
  $blocks['chart_revenue_office'] = array(
    'info' => t('Chart Revenue'),
  );
  return $blocks;
}

/**
 * implement hook_block_view
 */

function duhoc_chart_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'chart_colum_home':
      $block['content'] = duhoc_chart_colum();
      break;
    case 'chart_revenue_office':
      $block['content'] = duhoc_chart_revenue();
      break;
  }
  return $block;
}

function duhoc_chart_revenue() {
 return '';
}

function duhoc_chart_colum() {
  $js = '
      google.load("visualization", "1", {packages:["corechart"]});
google.setOnLoadCallback(drawChart);
function drawChart() {

  var data = google.visualization.arrayToDataTable([
    ["Month", "Now year", "Tagets"],
   '.duhoc_chart_data().'
  ]);

  var data2 = google.visualization.arrayToDataTable([
    ["Month", "Revenue "],
   '.duhoc_chart_data_revenue().'
  ]);
  var options = {
    chartArea:{left:20,top:60,width:"86%"},
    hAxis: {title: "", titleTextStyle: {color: "red"}}
  };

  var chart = new google.visualization.ColumnChart(document.getElementById("chart_div"));
  chart.draw(data, options);

  var chart2 = new google.visualization.ColumnChart(document.getElementById("chart_div2"));
  chart2.draw(data2, options);
}
  ';
  drupal_add_js($js, array('scope' => 'footer', 'type' => 'inline'));
  $header = array('Month','Sales');
  $output = '<div class="chart_sale"><h2>Monthly Sales</h2>'.drupal_render(drupal_get_form('duhoc_chart_form_select')).'</div>';
  $output .= '<div class="content_home"> <div id="chart_div" style="width:700px;height:400px;float:left"></div>';
  $output  .= '<div class="content_mont" style ="width:200px;float:right;"><h2>Table Mothly Sales</h2>'.theme('table', array('header' => $header,   'rows' => duhoc_chart_time_now() )).'</div>';
  $output .= '</div>';
  $output .= '<div class="clearfix"></div>';
  $output .= '<div class="chart_reve"><h2>Monthly Revenue</h2>'.drupal_render(drupal_get_form('duhoc_chart_form_select')).'</div>';
  $output .= '<div class="content_home1"> <div id="chart_div2" style="width:700px;height:400px;float:left"></div>';
  $output  .= '<div class="content_mont" style ="width:200px;float:right;"><h2>Table Mothly Revenue</h2>'.theme('table', array('header' => array('Month','Revenue'),   'rows' => duhoc_chart_time_now_office() )).'</div>';
  $output .= '</div>';
  return $output;
}


function duhoc_chart_data_revenue() {
  $data ='';
  for($i = 1 ; $i <= 12; $i ++) {
    $value = duhoc_chart_revenue_value(8,$i,null);
    if(empty($value))
      $value = 0;
    $data .= '["'.duhhoc_chart_convert_month($i).'", '.$value.'], ' ;
  }
  return $data;
}
function duhoc_chart_data($area = null) {
  global $user;
  $data ='';
  if($area != null) {
    for($i = 1 ; $i <= 12; $i ++) {
      $taget = duhoc_chart_tagets($area,$i,null);
      if(!isset($taget))
        $taget = 0;
      $data .= '["'.duhhoc_chart_convert_month($i).'", '.duhoc_chart_sum_contract($area,$i,null).', '.$taget.'], ' ;
      if($i ==12)
        $data .= '["'.duhhoc_chart_convert_month($i).'", '.duhoc_chart_sum_contract($area,$i,null).', '.$taget.'] ' ;
    }

  }
  else {
    for($i = 1 ; $i <= 12; $i ++) {
      $taget = duhoc_chart_tagets($area,$i,null);
      if(!isset($taget))
        $taget = 0;
      $data .= '["'.duhhoc_chart_convert_month($i).'", '.duhoc_chart_sum_contract(null,$i,null).', '.$taget.'], ' ;
      if($i ==12)
        $data .= '["'.duhhoc_chart_convert_month($i).'", '.duhoc_chart_sum_contract(null,$i,null).', '.$taget.'] ' ;
    }
  }
  return $data;
}

function duhoc_chart_tagets($area = null,$moth,$year) {
  global $user;
  if($area != null) {
    $query = db_query("SELECT entity_id FROM {field_data_field_area} WHERE field_area_value = :area", array(':area' => $area));
    if($query ->rowCount() >0 ) {
      foreach($query as $result) {
        $row[] = $result -> entity_id;
      }
      $str = implode (", ", $row);
    }
    else $str ='';
  }
  else {
    if(isset($user -> roles[8])) {
      $query_area = db_query("SELECT field_area_value FROM {field_data_field_area} WHERE entity_id = :uid",array(':uid'=>$user->uid))->fetchField();
      $query = db_query("SELECT entity_id FROM field_data_field_area  WHERE field_area_value =:area", array(':area' => $query_area));
      foreach($query as $result) {
        $row[] = $result -> entity_id;
      }
      $str = implode (", ", $row);
    }
    else
      $str = $user -> uid;
  }
  $query = db_query("SELECT target.field_target_value as giatri
                    FROM field_data_field_target as target INNER JOIN field_data_field_th_ng as mont
                    ON target.delta = mont.delta
                    WHERE FROM_UNIXTIME(mont.field_th_ng_value,'%c') = :month AND mont.entity_id IN (:uid)",array(':month' => $moth,':uid' => $str));
  $num = $query ->rowCount();
  if($num >0) {
    foreach ($query as $record) {
      $result =  $record ->giatri;
    }
  }
else $result = 0;
return $result;
}

function duhoc_chart_tagets_office($moth) {
  $uid = duhoc_chart_list_member();
  $query = db_query("SELECT SUM(target.field_target_value) as giatri
                    FROM field_data_field_target as target INNER JOIN field_data_field_th_ng as mont
                    ON target.delta = mont.delta
                    WHERE FROM_UNIXTIME(mont.field_th_ng_value,'%c') = :month AND mont.entity_id IN (:uid)",array(':month' => $moth,':uid' => $uid));
  foreach ($query as $record) {

    $result =  $record ->giatri;
  }
  return $result;
}
function duhoc_chart_time_now_office() {
  global $user;
  //$ymonth = date('m',time());
  $ymonth = '12';
  for($i = 1; $i <= $ymonth ;$i++) {
    $sale = duhoc_chart_revenue_value(8,$i,$user ->uid);
    $row['month'] = duhhoc_chart_convert_month($i);
    $row['sale'] = $sale;
    $rows[] = $row;
  }
  return $rows;
}

function duhoc_chart_time_now($area = null) {
  global $user;
  //$ymonth = date('m',time());
  $ymonth = '12';
for($i = 1; $i <= $ymonth ;$i++) {
  $sale = duhoc_chart_sum_contract($area,$i,null);
  $row['month'] = duhhoc_chart_convert_month($i);
  $row['sale'] = $sale;
  $rows[] = $row;
}
  return $rows;
}

function duhoc_chart_sum_contract($area=null,$month = null,$year = null) {
  global $user;
  if($area != null) {
    $query = db_query("SELECT entity_id FROM {field_data_field_area} WHERE field_area_value = :area", array(':area' => $area));
    if($query ->rowCount() >0 ) {
      foreach($query as $result) {
        $row[] = $result -> entity_id;
      }
      $str = implode (", ", $row);
    }
    else $str ='';

  }
  else {
    if(isset($user -> roles[8])) {
      $query_area = db_query("SELECT field_area_value FROM {field_data_field_area} WHERE entity_id = :uid",array(':uid'=>$user->uid))->fetchField();
      $query = db_query("SELECT entity_id FROM field_data_field_area  WHERE field_area_value =:area", array(':area' => $query_area));
      foreach($query as $result) {
        $row[] = $result -> entity_id;
      }
      $str = implode (", ", $row);
    }
    else
      $str = $user -> uid;
  }

  $query = db_query("SELECT contract.field_student_contract_value FROM
  field_data_field_student_contract as contract
   INNER JOIN   field_data_field_create_date as creat ON contract.field_student_contract_value =  creat.entity_id
   INNER JOIN  node as n ON  contract.entity_id = n.nid
  WHERE n.uid IN (:uid) AND FROM_UNIXTIME(creat.field_create_date_value,'%c') = :month",array(':uid' => $str,':month' => $month))->rowCount();
  return $query;

}

function duhoc_chart_list_member() {
  global $user;
  $user = user_load($user ->uid);
  $area = $user ->field_area['und'][0]['value'];
  $query = db_query("SELECT entity_id FROM {field_data_field_area} WHERE field_area_value = :area" , array(':area' => $area));
  foreach($query as $result) {
    $row[] = $result -> entity_id;
  }

  $str = implode (", ", $row);
  return $str;
}

function duhhoc_chart_convert_month($month) {
  switch($month) {
    case '1':
      return 'January';
    break;
    case '2':
      return 'February';
    break;
    case '3':
      return 'March';
    break;
    case '4':
      return 'April';
    break;
    case '5':
      return 'May';
    break;
    case '6':
      return 'June';
    break;
    case '7':
      return 'July';
    break;
    case '8':
      return 'August';
    break;
    case '9':
      return 'September';
    break;
    case '10':
      return 'October';
    break;
    case '11':
      return 'November';
    break ;
    case '12':
      return 'December';
    break;
  }
}

function duhoc_chart_form_select() {
  $arr = array_merge(array('00'=>'ALL'),duhoc_select_list_area() );
  $form = array();
  $form['selected'] = array(
    '#type' => 'select',
    '#options' => $arr,
  );

  return $form;
}
function duhoc_chart_revenue_value($role = null,$month= null,$year = null) {
  global $user;
  if(isset($role)) {
      $query_area = db_query("SELECT field_area_value FROM {field_data_field_area} WHERE entity_id =:uid", array(':uid' => $user ->uid));
      foreach($query_area as $area) {
        $areas = $area -> field_area_value;
      }
      $query_ui = db_query("SELECT entity_id FROM {field_data_field_area} WHERE field_area_value =:area",array(':area'=>$areas));
      foreach($query_ui as $row_ui) {
        $row_uis[] = $row_ui -> entity_id;
      }
      $str_ui = implode (", ", $row_uis);
  }
  else {
    if(isset($user->roles[8]))
    {
        $query_area = db_query("SELECT field_area_value FROM {field_data_field_area} WHERE entity_id =:uid", array(':uid' => $user ->uid));
        foreach($query_area as $area) {
          $areas = $area -> field_area_value;
        }
        $query_ui = db_query("SELECT entity_id FROM {field_data_field_area} WHERE field_area_value =:area",array(':area'=>$areas));
        foreach($query_ui as $row_ui) {
          $row_uis[] = $row_ui -> entity_id;
        }
        $str_ui = implode (", ", $row_uis);
    }
    else
    $str_ui = $user -> uid;
  }

  $query = db_query("SELECT SUM(r_usa.field_com_received_usa_value) as giatri
   FROM field_data_field_com_received_usa as r_usa
   INNER JOIN field_data_field_collection_test as c_reci ON r_usa.entity_id = c_reci.field_collection_test_value
   INNER JOIN field_data_field_student_pathway as pathway ON c_reci.entity_id = pathway.field_student_pathway_value
   INNER JOIN node as n ON pathway.entity_id = n.nid
   INNER JOIN field_data_field_com_received_date as dates ON dates.entity_id = c_reci.field_collection_test_value
   WHERE n.uid IN (:uid) AND FROM_UNIXTIME(dates.field_com_received_date_value,'%c') = :ngay",array(':uid' => $str_ui,':ngay' =>$month));

  foreach($query as $result) {
    $row = $result -> giatri;
  }
  return $row;
}
